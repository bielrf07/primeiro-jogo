const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

// Tamanho da grade para a cobrinha e a comida
const grid = 20;
let snake = [{ x: 9 * grid, y: 9 * grid }];  // Corpo da cobrinha começando no centro
let food = { x: 5 * grid, y: 5 * grid };    // Posição inicial da comida
let dx = grid;  // Direção inicial (movimento para a direita)
let dy = 0;
let score = 0;
let gameOver = false;

// Função para desenhar o jogo
function draw() {
    if (gameOver) {
        ctx.fillStyle = 'black';
        ctx.font = '30px Arial';
        ctx.fillText('Game Over!', canvas.width / 4, canvas.height / 2);
        ctx.fillText(`Pontuação: ${score}`, canvas.width / 4, canvas.height / 2 + 40);
        return;
    }

    // Limpar o canvas antes de redesenhar
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    // Desenhar a cobra
    ctx.fillStyle = 'green';
    for (let i = 0; i < snake.length; i++) {
        ctx.fillRect(snake[i].x, snake[i].y, grid, grid);
    }

    // Desenhar a comida
    ctx.fillStyle = 'red';
    ctx.fillRect(food.x, food.y, grid, grid);

    // Exibir a pontuação
    ctx.fillStyle = 'black';
    ctx.font = '20px Arial';
    ctx.fillText(`Pontuação: ${score}`, 10, 20);
}

// Função para mover a cobra
function move() {
    let head = { x: snake[0].x + dx, y: snake[0].y + dy };

    // Verificar colisão com as paredes
    if (head.x < 0 || head.x >= canvas.width || head.y < 0 || head.y >= canvas.height || checkCollision(head)) {
        gameOver = true;
        return;
    }

    snake.unshift(head);  // Adiciona a nova cabeça à frente

    // Verificar se comeu a comida
    if (head.x === food.x && head.y === food.y) {
        score += 10;
        spawnFood();  // Gera uma nova comida
    } else {
        snake.pop();  // Remove a cauda da cobra
    }
}

// Função para verificar se a cobra bateu em si mesma
function checkCollision(head) {
    for (let i = 1; i < snake.length; i++) {
        if (snake[i].x === head.x && snake[i].y === head.y) {
            return true; // A cobra bateu em si mesma
        }
    }
    return false; // Não houve colisão
}

// Função para gerar a comida em uma nova posição aleatória
function spawnFood() {
    food = {
        x: Math.floor(Math.random() * (canvas.width / grid)) * grid,
        y: Math.floor(Math.random() * (canvas.height / grid)) * grid
    };
}

// Função para lidar com as teclas pressionadas
function changeDirection(e) {
    if (e.key === 'ArrowUp' && dy === 0) {
        dx = 0;
        dy = -grid;  // Mover para cima
    } else if (e.key === 'ArrowDown' && dy === 0) {
        dx = 0;
        dy = grid;   // Mover para baixo
    } else if (e.key === 'ArrowLeft' && dx === 0) {
        dx = -grid;  // Mover para a esquerda
        dy = 0;
    } else if (e.key === 'ArrowRight' && dx === 0) {
        dx = grid;   // Mover para a direita
        dy = 0;
    }
}

// Função principal para rodar o jogo
function gameLoop() {
    if (gameOver) return;

    move();
    draw();
    setTimeout(gameLoop, 100);  // Controla a velocidade do jogo
}

// Iniciar o jogo
document.addEventListener('keydown', changeDirection);
gameLoop();  // Começa o loop do jogo